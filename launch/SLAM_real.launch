<launch>

<!-- Arguments -->
  <arg name="model" default="$(find mech_ros)/robot_description/urdf/mechROS.xacro"/>
  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find mech_ros)/rviz/slam_real.rviz" />
  <arg name="prefix" default="mechROS_"/>
  
<!-- Global Parameters -->
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
  <param name="use_gui" value="$(arg gui)"/>



<!-- IMU -->
  <node pkg="mech_ros" type="IMU_from_raw.py" name="converter" output="screen">
      <param name="calibrate_imu" value="True" />
      <param name="samples_number" value="750" />
      <param name="calibrations_file" value="/home/patrik/catkin_ws/src/mech_ros/localization/IMU_calibration.yaml" />

  </node>

<!-- IMU Madgwick fusion -->
<node name="imu_filter_node" pkg="imu_filter_madgwick" type="imu_filter_node" output="screen">
    <param name="world_frame" value="nwu" />
    <param name="use_magnetic_field_msg" value="false" />
    <param name="use_mag" value="true" />
    <!-- <param name="gain" value="0.09" /> -->
        <param name="gain" value="0.03" />
    <param name="zeta" value="0.002" />
    <param name="orientation_stddev" value="1" />
    <param name="fixed_frame" value="imu_link" />
    <param name="publish_tf" value="false" />
</node>


 <!-- joy node -->
  <!-- <node respawn="true" pkg="joy"
        type="joy_node" name="twist_joy" >
    <param name="dev" type="string" value="/dev/input/js0" />
    <param name="deadzone" value="0.01" />
    <param name="autorepeat_rate" value="30" />

  </node> -->

 <!-- Axes -->
  <!-- <node pkg="mech_ros" type="Teleop.py" name="teleop"/> -->


 <!-- Kinematics -->
  <node pkg="mech_ros" type="Kinematics.py" name="kinematics"/>ll

<!-- Rosbag recording -->
    <node pkg="rosbag" type="record" name="rosbag_record"
        args=" record -o /home/patrik/catkin_ws/src/mech_ros/bag_files/SLAM/ -a"/>


<!-- Correct orientation from Madgwick for declination -->
 <!-- <node name="declination_corrector" pkg="mech_ros" type="Declination_correction.py"/> -->

<!-- Simulated robot -->


  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="False"/>
   </node>

   <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <!-- <param name="use_tf_static" value="False" /> -->
  </node>
 
 <!-- Rviz visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

 <!-- Laser scan matcher -->
  <include file="$(find mech_ros)/launch/Laser_scan_matcher_real.launch"/>

 <!-- Extended Kalman - relatve  with laser scan matcher-->
  <include file="$(find mech_ros)/launch/ext_kalman_relative_SLAM_real.launch"/>

 <!-- Gmapping -->
  <include file="$(find mech_ros)/launch/Gmapping_real.launch"/>

 <!-- Hector SLAM -->
  <!-- <include file="$(find mech_ros)/launch/Hector_real.launch"/> -->
  
</launch>