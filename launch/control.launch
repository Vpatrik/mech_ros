<?xml version="1.0"?>
<launch>
  <!-- skid, omni, steel_skid, steel_omni, diffdrive,x_omni -->
  <!-- diffdrive has been tested only in simulation -->
<!--  <arg name="kinematics" default="$(optenv ROBOT_KINEMATICS skid)"/>-->
<!--  <arg name="wheel_diameter" default="$(optenv ROBOT_WHEEL_DIAMETER 0.1)"/>-->
<!--  <arg name="ros_planar_move_plugin" default="false"/>-->
  <arg name="sim" default="true"/>
<!--  <arg name="cmd_vel" default="mechROS_base_control/cmd_vel"/>-->
  <arg name="prefix" default="mechROS_"/>
  <arg name="launch_robot_localization" default="false"/>
<!--  <arg name="has_safety_module" default="false"/>-->

  <!-- Robot - Load joint controller configurations from YAML file to parameter server -->
<!--  <group unless="$(arg sim)">	  -->
<!--	  <rosparam file="$(find mech_ros)/control/mechROS_skid_steer_control.yaml" command="load"/>-->
<!--	  <param name="mechROS_base_control/joint/back_left_wheel_joint/name" value="$(arg prefix)back_left_wheel_joint"/>-->
<!--	  <param name="mechROS_base_control/joint/back_right_wheel_joint/name" value="$(arg prefix)back_right_wheel_joint"/>-->
<!--	  <param name="mechROS_base_control/joint/front_right_wheel_joint/name" value="$(arg prefix)front_right_wheel_joint"/>-->
<!--	  <param name="mechROS_base_control/joint/front_left_wheel_joint/name" value="$(arg prefix)front_left_wheel_joint"/>-->

<!--	  <param name="mechROS_base_control/odom_frame" value="$(arg prefix)odom"/>-->
<!--	  <param name="mechROS_base_control/robot_base_frame" value="$(arg prefix)base_link"/>-->
<!--	  <param name="mechROS_base_control/wheel_diameter" value="$(arg wheel_diameter)"/>-->
<!--	  -->

	  <!-- load the controllers -->
<!--	  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"-->
<!--		output="screen" args="-->
<!--		  mechROS_base_control-->
<!--		  joint_read_state_controller -->
<!--		  ">-->
<!--	  </node>-->
<!--	  -->
<!--  </group>-->


    <!-- Simulation - Load joint controller configurations from YAML file to parameter server -->
  <group if="$(arg sim)">	  	  
	  <rosparam file="$(find mech_ros)/control/mechROS_skid_steer_control.yaml" command="load"/>  
	  
	  <!-- if robot_localization node is launched the controller must not publish the odom tf-->
	  <param if="$(arg launch_robot_localization)" name="mechROS_base_control/enable_odom_tf" value="false"/>	 
	  
	   <!-- load the planar ros controllers by urdf -->
<!--	  <node if="$(arg ros_planar_move_plugin)" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"-->
<!--		output="screen" args="		  -->
<!--		  joint_read_state_controller -->
<!--		  ">-->
<!--	  </node>-->
	  <!-- load the skid steer ros controllers -->
<!--	  <node unless="$(arg ros_planar_move_plugin)" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"-->
<!--		output="screen" args="	-->
<!--		  mechROS_base_control-->
<!--		  joint_read_state_controller -->
<!--		  ">-->
<!--	  </node>	  -->

	  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
		output="screen" ns="/mechROS" args="base_control"> </node>

  </group>
  

<!--  <node pkg="twist_mux" type="twist_mux" name="twist_mux">-->
<!--    <rosparam command="load" file="$(find mech_ros)/control/twist_mux.yaml" />-->
<!--    <remap if="$(arg has_safety_module)" from="cmd_vel_out" to="twist_mux/cmd_vel" />-->
<!--    <remap unless="$(arg has_safety_module)" from="cmd_vel_out" to="$(arg cmd_vel)" />-->
<!--  </node>-->
<!--  <node pkg="twist_mux" type="twist_marker" name="twist_marker">-->
<!--    <remap from="twist"  to="$(arg cmd_vel)"/>-->
<!--    <remap from="marker" to="twist_marker"/>-->
<!--  </node>-->

  
</launch>

